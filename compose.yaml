version: '3.9'

services:
  balance_service:
    container_name: arch_balance_service
    build:
      context: ./backend
      dockerfile: BalanceServiceDockerfile
    environment:
      - ConnectionStrings__DefaultConnection=User ID=k0c0w;Password=P@ssw0rd;Server=host.docker.internal;Port=6543;Database=Balance;
      - ASPNETCORE_URLS=https://+443;http://+80
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${KestrelCertifPass}
    ports:
      - 6552:443

    depends_on:
      - db

  chat_history_saver:
    build:
      context: ./backend
      dockerfile: ChatConsumersDockerfile
    container_name: arch_chatconsumer
    environment:
      - ConnectionStrings__DefaultConnection=User ID=k0c0w;Password=P@ssw0rd;Server=host.docker.internal;Port=6543;Database=Carsharing;
      - RabbitMqConfig__Username=k0c0w
      - RabbitMqConfig__Password=passw0rd
      - RabbitMqConfig__Hostname=host.docker.internal
      - RabbitMqConfig__Port=5673
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${KestrelCertifPass}
    depends_on:
      - rabbitmq
      - db
  
  backend:
    build:
      context: ./backend
      dockerfile: CarsharingDockerfile
    container_name: arch_backend
    environment:
      - KnownHosts__FrontendHosts__Main="http://localhost:3000"
      - KnownHosts__FrontendHosts__Admin="http://localhost:3001"
      - KnownHosts__BackendHosts__FileService=http://host.docker.internal:7127
      - KnownHosts__BackendHosts__BalanceMicroservice=https://host.docker.internal:6552
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+443;http://+80
      - ASPNETCORE_HTTPS_PORT=443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${KestrelCertifPass}
      - ConnectionStrings__DefaultConnection=User ID=k0c0w;Password=P@ssw0rd;Server=host.docker.internal;Port=6543;Database=Carsharing;
      - Authorization__Google__AppId =${GOOGLE_APP_ID}
      - Authorization__Google__AppSecret =${GOOGLE_APP_SECRET}
      - RabbitMqConfig__Username=k0c0w
      - RabbitMqConfig__Password=passw0rd
      - RabbitMqConfig__Hostname=host.docker.internal
      - RabbitMqConfig__Port=5673
    depends_on:
      - db
      - rabbitmq
      - balance_service
    ports:
      - 80:80
      - 443:443
        
  graphql:
    build:
      context: ./backend
      dockerfile: GraqlQlDockerfile
    container_name: arch_graphql
    environment:
      - KnownHosts__FrontendHosts__Main="http://localhost:3000"
      - KnownHosts__FrontendHosts__Admin="http://localhost:3001"
      - KnownHosts__BackendHosts__FileService=http://host.docker.internal:7127
      - KnownHosts__BackendHosts__BalanceMicroservice=https://host.docker.internal:6552
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+443;http://+80
      - ASPNETCORE_HTTPS_PORT=443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${KestrelCertifPass}
      - ConnectionStrings__DefaultConnection=User ID=k0c0w;Password=P@ssw0rd;Server=host.docker.internal;Port=6543;Database=Carsharing;
      - RabbitMqConfig__Username=k0c0w
      - RabbitMqConfig__Password=passw0rd
      - RabbitMqConfig__Hostname=host.docker.internal
      - RabbitMqConfig__Port=5673
    depends_on:
      - db
      - rabbitmq
      - balance_service
    ports:
      - 5082:80
      - 7061:443
  
  website:
    build: ./frontend/website
    container_name: arch_frontend
    environment:
      - REACT_APP_WEBSITE_API_URL=https://localhost:443/api
      - REACT_APP_WEBSITE_ORIGIN=https://localhost:443
      - REACT_APP_S3_API_URL=http://localhost:7127
      - REACT_APP_WEBSITE_CHAT_URL=https://localhost:443/chat
      - REACT_LOCAL_HOST="http://localhost:3000"
      - REACT_APP_WEBSITE_OCCASION_CHAT_URL=https://localhost:443/occasion_chat
    ports:
      - 3000:3000
    depends_on:
      - backend
      - s3service
  
  admin:
    build: ./frontend/admin
    container_name: arch_admin
    environment:
      - REACT_APP_ADMIN_API_URL=https://localhost:443/api/admin
      - REACT_APP_WEBSITE_API_URL=https://localhost:443/api
      - REACT_APP_WEBSITE_CHAT_URL=https://localhost:443/chat
      - REACT_APP_OCCASION_CHAT_URL=https://localhost:443/occasion_chat
      - REACT_LOCAL_HOST="http:localhost:3001"
      - REACT_APP_S3_API_URL=http://localhost:7127
    ports:
      - 3001:3000
    depends_on:
      - backend
      - s3service

  db:
    container_name: arch_db
    image: postgres:latest
    environment:
      POSTGRES_USER: k0c0w
      POSTGRES_PASSWORD: P@ssw0rd
    volumes:
      - postgredb-data:/var/lib/postgresql/data
    ports:
      - 6543:5432
  
  rabbitmq:
    container_name: arch_rabbitmq
    image: rabbitmq:3.10.6-management-alpine
    ports:
      - 15673:15672
      - 5673:5672
    environment:
      RABBITMQ_DEFAULT_USER: k0c0w
      RABBITMQ_DEFAULT_PASS: passw0rd

  s3service:
    container_name: arch_s3service
    build:
      context: ./backend
      dockerfile: MinioConsumersDockerfile
    ports:
      - 7127:80
      - 7128:443
    depends_on:
      - minio
      - tmdb
      - pmdb
    environment:
      - KnownHosts__FrontendHosts__Main="http://localhost:3000"
      - KnownHosts__FrontendHosts__Admin="http://localhost:3001"
      - MinioS3__AccessKey=minioadmin
      - MinioS3__SecretKey=minioadmin
      - MinioS3__Timeout=5000
      - MinioS3__Endpoint=minio:9000
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+443;http://+80
      - ASPNETCORE_HTTPS_PORT=443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${KestrelCertifPass}
      - RedisDbSettings__ConnectionUrl=host.docker.internal:6381,abortConnect=false,connectTimeout=30000,responseTimeout=30000
      - RedisDbSettings__Host=host.docker.internal
      - RedisDbSettings__Port=6381
      - MongoDbSettings__ConnectionUrl=mongodb://host.docker.internal:27018/
      - MongoDbSettings__DatabaseName=carsharing
  
  minio:
    image: minio/minio
    container_name: arch_minio
    hostname: minio
    ports:
      - 9000:9000
      - 9091:9091
    volumes:
      - ./volume_minio:/data
    environment:
      MINIO_ROOT_USER: k0c0w
      MINIO_ROOT_PASSWORD: P@ssw0rd
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server --console-address ":9091" /data/
    
  pmdb:
    image: mongo
    container_name: arch_mongo
    restart: always
    ports:
      - "27018:27017"
      
  tmdb:
    image: redis:latest
    container_name: arch_redis
    restart: always
    ports:
      - "6381:6379"
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf

volumes:
  postgredb-data: