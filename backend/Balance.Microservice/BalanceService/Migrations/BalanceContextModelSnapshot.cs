// <auto-generated />
using System;
using BalanceService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BalanceService.Migrations
{
    [DbContext(typeof(BalanceContext))]
    partial class BalanceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BalanceService.Domain.Balance", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Savings")
                        .HasColumnType("numeric");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("BalanceService.Domain.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<Guid>("BalanceId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Commited")
                        .HasColumnType("boolean");

                    b.Property<int>("FractionPart")
                        .HasColumnType("integer");

                    b.Property<long>("IntegerPart")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsPositive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BalanceService.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<Guid>("BalanceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BalanceService.Domain.Balance", b =>
                {
                    b.HasOne("BalanceService.Domain.User", "User")
                        .WithOne("Balance")
                        .HasForeignKey("BalanceService.Domain.Balance", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BalanceService.Domain.Transaction", b =>
                {
                    b.HasOne("BalanceService.Domain.Balance", "Balance")
                        .WithMany("Transactions")
                        .HasForeignKey("BalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Balance");
                });

            modelBuilder.Entity("BalanceService.Domain.Balance", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("BalanceService.Domain.User", b =>
                {
                    b.Navigation("Balance")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
